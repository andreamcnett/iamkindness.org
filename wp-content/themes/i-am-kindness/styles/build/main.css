@charset "UTF-8";
/* Neat 1.7.0.pre
 * http://neat.bourbon.io
 * Copyright 2012-2014 thoughtbot, inc.
 * MIT License */
/**
 * Returns a media context (media query / grid context) that can be stored in a variable and passed to `media()` as a single-keyword argument. Media contexts defined using `new-breakpoint` are used by the visual grid, as long as they are defined before importing Neat.
 *
 * @param {List} $query
 *   - A list of media query features and values. Each `$feature` should have a corresponding `$value`. If there is only a single `$value` in `$query`, `$default-feature` is going to be used. The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`). For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).
 *
 * @param {Number (unitless)} $total-columns ($grid-columns)
 *   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.
 *
 * @example scss - Usage
 *   $mobile: new-breakpoint(max-width 480px 4);
 *
 *   .element {
 *     @include media($mobile) {
 *       @include span-columns(4);
 *     }
 *   }
 *
 * @example css - CSS Output
 *   @media screen and (max-width: 480px) {
 *     .element {
 *       display: block;
 *       float: left;
 *       margin-right: 7.42297%;
 *       width: 100%;
 *     }
 *     .element:last-child {
 *       margin-right: 0;
 *     }
 *   }
 */
/**
 * Sets the relative width of a single grid column. The unit used should be the same one used to define `$gutter`. To learn more about golden-ratio() see [Bourbon docs](http://bourbon.io/docs/#golden-ratio). Set with a `!global` flag.
 *
 * @type Number (Unit)
 */
/**
 * Sets the relative width of a single grid gutter. The unit used should be the same one used to define `$column`. To learn more about golden-ratio() see [Bourbon docs](http://bourbon.io/docs/#golden-ratio). Set with the `!global` flag.
 *
 * @type Number (Unit)
 */
/**
 * Sets the total number of columns in the grid. Its value can be overridden inside a media query using the `media()` mixin. Set with the `!global` flag.
 *
 * @type Number (Unitless)
 */
/**
 * Sets the max-width property of the element that includes `outer-container()`. To learn more about `em()` see [Bourbon docs](http://bourbon.io/docs/#px-to-em). Set with the `!global` flag.
 *
 * @type Number (Unit)
 */
/**
 * When set to true, it sets the box-sizing property of all elements to `border-box`. Set with a `!global` flag.
 *
 * @type Bool
 *
 * @example css - CSS Output
 *   * {
 *     -webkit-box-sizing: border-box;
 *     -moz-box-sizing: border-box;
 *     box-sizing: border-box;
 *   }
 */
/**
 * Sets the default [media feature](http://www.w3.org/TR/css3-mediaqueries/#media) that `media()` and `new-breakpoint()` revert to when only a breakpoint value is passed. Set with a `!global` flag.
 *
 * @type String
 */
/**
 * Sets the default layout direction of the grid. Can be `LTR` or `RTL`. Set with a `!global` flag.
 *
 * @type String
 */
/**
 * Displays the visual grid when set to true. The overlaid grid may be few pixels off depending on the browser's rendering engine and pixel rounding algorithm. Set with the `!global` flag.
 *
 * @type Bool
 */
/**
 * Sets the visual grid color. Set with `!global` flag.
 *
 * @type Color
 */
/**
 * Sets the `z-index` property of the visual grid. Can be `back` (behind content) or `front` (in front of content). Set with `!global` flag.
 *
 * @type String
 */
/**
 * Sets the opacity property of the visual grid. Set with `!global` flag.
 *
 * @type Number (unitless)
 */
/**
 * Disable all deprecation warnings. Defaults to `false`. Set with a `!global` flag.
 *
 * @type Bool
 */
html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

*, *:before, *:after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit; }

/**
 * Removes the element's gutter margin, regardless of its position in the grid hierarchy or display property. It can target a specific element, or every `nth-child` occurrence. Works only with `block` layouts.
 *
 * @param {List} $query (block)
 *   List of arguments. Supported arguments are `nth-child` selectors (targets a specific pseudo element) and `auto` (targets `last-child`).
 *
 *   When passed an `nth-child` argument of type `*n` with `block` display, the omega mixin automatically adds a clear to the `*n+1` th element. Note that composite arguments such as `2n+1` do not support this feature.
 *
 *   **Deprecation warning**: The omega mixin will no longer take a `$direction` argument. To change the layout direction, use `row($direction)` or set `$default-layout-direction` instead.
 *
 * @example scss - Usage
 *   .element {
 *     @include omega;
 *   }
 *
 *   .nth-element {
 *     @include omega(4n);
 *   }
 *
 * @example css - CSS Output
 *   .element {
 *     margin-right: 0;
 *   }
 *
 *   .nth-element:nth-child(4n) {
 *     margin-right: 0;
 *   }
 *
 *   .nth-element:nth-child(4n+1) {
 *     clear: left;
 *   }
 */
/**
 * Makes an element a outer container by centring it in the viewport, clearing its floats, and setting its `max-width`.
 * Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.
 *
 * @param {Number (unit)} $local-max-width ($max-width)
 *   Max width to be applied to the element. Can be a percentage or a measure.
 *
 * @example scss - Usage
 *   .element {
 *     @include outer-container(100%);
 *   }
 *
 * @example css - CSS Output
 *   .element {
 *     *zoom: 1;
 *     max-width: 100%;
 *     margin-left: auto;
 *     margin-right: auto;
 *   }
 *
 *   .element:before, .element:after {
 *     content: " ";
 *     display: table;
 *   }
 *
 *   .element:after {
 *     clear: both;
 *   }
 */
/**
 * Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.
 *
 * @param {List} $span
 *   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).
 *
 *   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.
 *
 *   The values can be separated with any string such as `of`, `/`, etc.
 *
 * @param {String} $display (block)
 *   Sets the display property of the element. By default it sets the display propert of the element to `block`.
 *
 *   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.
 *
 *   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.
 *
 * @example scss - Usage
 *   .element {
 *     @include span-columns(6);

 *    .nested-element {
 *      @include span-columns(2 of 6);
 *    }
 *  }
 *
 * @example css - CSS Output
 *   .element {
 *     display: block;
 *     float: left;
 *     margin-right: 2.35765%;
 *     width: 48.82117%;
 *   }
 *
 *   .element:last-child {
 *     margin-right: 0;
 *   }
 *
 *   .element .nested-element {
 *     display: block;
 *     float: left;
 *     margin-right: 4.82916%;
 *     width: 30.11389%;
 *   }
 *
 *   .element .nested-element:last-child {
 *     margin-right: 0;
 *   }
 */
/**
 * Designates the element as a row of columns in the grid layout. It clears the floats on the element and sets its display property. Rows can't be nested, but there can be more than one row element—with different display properties—per layout.
 *
 * @param {String} $display (default)
 *   Sets the display property of the element and the display context that will be used by its children. Can be `block` or `table`.
 *
 * @param {String} $direction ($default-layout-direction)
 *   Sets the layout direction. Can be `LTR` (left-to-right) or `RTL` (right-to-left).
 *
 * @example scss - Usage
 *   .element {
 *     @include row();
 *   }
 *
 * @example css - CSS Output
 *   .element {
 *     *zoom: 1;
 *     display: block;
 *   }
 *
 *  .element:before, .element:after {
 *    content: " ";
 *    display: table;
 *  }
 *
 *  .element:after {
 *    clear: both;
 *  }
 */
/**
 * Translates an element horizontally by a number of columns. Positive arguments shift the element to the active layout direction, while negative ones shift it to the opposite direction.
 *
 * @param {Number (unitless)} $n-columns (1)
 *   Number of columns by which the element shifts.
 *
 * @example scss - Usage
 *   .element {
 *     @include shift(-3);
 *   }
 *
 * @example css - CSS output
 *   .element {
 *     margin-left: -25.58941%;
 *   }
 */
/**
 * Translates an element horizontally by a number of columns, in a specific nesting context.
 *
 * @param {List} $shift
 *   A list containing the number of columns to shift (`$columns`) and the number of columns of the parent element (`$container-columns`).
 *
 *   The two values can be separated with any string such as `of`, `/`, etc.
 *
 * @example scss - Usage
 *   .element {
 *     @include shift(-3 of 6);
 *   }
 *
 * @example css - CSS output
 *   .element {
 *     margin-left: -52.41458%;
 *   }
 */
/**
 * Adds padding to the element.
 *
 * @param {List} $padding (flex-gutter())
 *   A list of padding value(s) to use. Passing `default` in the list will result in using the gutter width as a padding value.
 *
 * @example scss - Usage
 *   .element {
 *     @include pad(30px -20px 10px default);
 *   }
 *
 * @example css - CSS Output
 *   .element {
 *     padding: 30px -20px 10px 2.35765%;
 *   }
 */
/**
 * Forces the element to fill its parent container.
 *
 * @example scss - Usage
 *   .element {
 *     @include fill-parent;
 *   }
 *
 * @example css - CSS Output
 *   .element {
 *     width: 100%;
 *     -webkit-box-sizing: border-box;
 *     -moz-box-sizing: border-box;
 *     box-sizing: border-box;
 *   }
 */
/**
 * Outputs a media-query block with an optional grid context (the total number of columns used in the grid).
 *
 * @param {List} $query
 *   A list of media query features and values, where each `$feature` should have a corresponding `$value`.
 *   For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).
 *
 *   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.
 *
 *   The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`).
 *
 *
 * @param {Number (unitless)} $total-columns ($grid-columns)
 *   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.
 *
 * @example scss - Usage
 *   .responsive-element {
 *      @include media(769px) {
 *        @include span-columns(6);
 *      }
 *   }
 *
 *  .new-context-element {
 *    @include media(min-width 320px max-width 480px, 6) {
 *      @include span-columns(6);
 *    }
 *  }
 *
 * @example css - CSS Output
 *  @media screen and (min-width: 769px) {
 *    .responsive-element {
 *      display: block;
 *      float: left;
 *      margin-right: 2.35765%;
 *      width: 48.82117%;
 *    }
 *
 *    .responsive-element:last-child {
 *      margin-right: 0;
 *    }
 *  }
 *
 *  @media screen and (min-width: 320px) and (max-width: 480px) {
 *    .new-context-element {
 *      display: block;
 *      float: left;
 *      margin-right: 4.82916%;
 *      width: 100%;
 *    }
 *
 *    .new-context-element:last-child {
 *      margin-right: 0;
 *    }
 *  }
 */
/**
 * Resets the active display property to `block`. Particularly useful when changing the display property in a single row.
 *
 * @example scss - Usage
 *   .element {
 *     @include row(table);
 *     // Context changed to table display
 *   }
 *
 *   @include reset-display;
 *   // Context is reset to block display
 */
/**
 * Resets the active layout direction to the default value set in `$default-layout-direction`. Particularly useful when changing the layout direction in a single row.
 *
 * @example scss - Usage
 *   .element {
 *     @include row($direction: RTL);
 *     // Context changed to right-to-left
 *   }
 *
 *   @include reset-layout-direction;
 *   // Context is reset to left-to-right
 */
/**
 * Resets both the active layout direction and the active display property.
 *
 * @example scss - Usage
 *   .element {
 *     @include row(table, RTL);
 *     // Context changed to table table and right-to-left
 *   }
 *
 *   @include reset-all;
 *   // Context is reset to block display and left-to-right
 */
/**
 * Changes the display property used by other mixins called in the code block argument.
 *
 * @param {String} $display (block)
 *   Display value to be used within the block. Can be `table` or `block`.
 *
 * @example scss
 *   @include display(table) {
 *    .display-table {
 *      @include span-columns(6);
 *     }
 *   }
 *
 * @example css
 *   .display-table {
 *      display: table-cell;
 *      ...
 *   }
 */
/**
 * Changes the direction property used by other mixins called in the code block argument.
 *
 * @param {String} $direction (left-to-right)
 *   Layout direction to be used within the block. Can be `left-to-right` or `right-to-left`.
 *
 * @example scss - Usage
 *   @include direction(right-to-left) {
 *    .right-to-left-block {
 *      @include span-columns(6);
 *     }
 *   }
 *
 * @example css - CSS Output
 *   .right-to-left-block {
 *     float: right;
 *      ...
 *   }
 */
/***********/
/* BODY.SCSS */
/***********/
/***********/
/* HEADER.SCSS */
/***********/
.header {
  background-color: #01ddfe;
  height: 5.5em; }

nav {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto; }
  nav:after {
    content: "";
    display: table;
    clear: both; }
  nav .logo {
    display: inline;
    margin-top: 5px;
    width: 160px; }
  nav ul.menu {
    display: inline-block;
    list-style-type: none;
    margin: 0;
    padding-top: 1.5em;
    position: absolute; }
    nav ul.menu li {
      border: 2px solid #b5f326;
      display: inline-block;
      margin: 0 0 0 2em;
      text-align: center;
      width: 160px; }
    nav ul.menu a {
      color: white;
      font-family: "minion-pro",serif;
      font-style: italic;
      font-size: 1.5em;
      font-weight: 400;
      text-decoration: none;
      text-transform: uppercase; }

/***********/
/* LAYOUT.SCSS */
/***********/
/*index.php*/
.index-intro {
  height: 776px;
  position: relative;
  width: 100%; }
  .index-intro .intro-content {
    max-width: 68em;
    margin-left: auto;
    margin-right: auto; }
    .index-intro .intro-content:after {
      content: "";
      display: table;
      clear: both; }
    .index-intro .intro-content img {
      display: block;
      margin: 0 auto 0 auto;
      padding: 5em 0 0 0; }
    .index-intro .intro-content h1.intro-statement {
      background-color: #b5f326;
      color: #01ddfe;
      font-family: "minion-pro",serif;
      font-style: italic;
      font-size: 2em;
      font-weight: 400;
      margin: 2.5em 0 0 0;
      text-align: center;
      text-transform: uppercase; }
    .index-intro .intro-content h4 {
      color: white;
      font-family: "proxima-nova",sans-serif;
      font-size: 1.5em;
      font-style: normal;
      font-weight: 400;
      letter-spacing: .05em;
      margin: 2.5em 0 0 0;
      text-align: center;
      text-transform: uppercase; }
      .index-intro .intro-content h4 i {
        background-color: #b5f326;
        border-radius: 5px;
        color: #01ddfe;
        font-size: .8em;
        padding: 7px 10px 5px 10px; }
    .index-intro .intro-content ul.index-menu {
      float: center;
      list-style-type: none;
      margin: 3em 0 0 0;
      padding: 0;
      text-align: center; }
      .index-intro .intro-content ul.index-menu li {
        border: 2px solid #b5f326;
        display: inline-block;
        margin: 1.5em 1em 0 1em;
        width: 160px; }
      .index-intro .intro-content ul.index-menu a {
        color: white;
        font-family: "minion-pro",serif;
        font-style: italic;
        font-size: 1.5em;
        font-weight: 400;
        text-decoration: none;
        text-transform: uppercase; }

.index-main-content {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto; }
  .index-main-content:after {
    content: "";
    display: table;
    clear: both; }
  .index-main-content .volunteer-teaser {
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 48.821174201%;
    background-color: #01ddfe;
    height: 320px;
    margin: 1em 0 0 0; }
    .index-main-content .volunteer-teaser:last-child {
      margin-right: 0; }
    .index-main-content .volunteer-teaser .volunteer-text {
      padding: 2em; }
      .index-main-content .volunteer-teaser .volunteer-text p,
      .index-main-content .volunteer-teaser .volunteer-text h2 {
        color: white; }
  .index-main-content .donate-teaser {
    margin-right: 0;
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 48.821174201%;
    margin: 1em 0 0 0;
    background-color: #a003b6;
    height: 320px; }
    .index-main-content .donate-teaser:last-child {
      margin-right: 0; }
    .index-main-content .donate-teaser .donate-text {
      float: left;
      display: block;
      margin-right: 4.8291579146%;
      width: 65.0569473618%;
      padding: 2em 0 2em 2em;
      margin-right: 0; }
      .index-main-content .donate-teaser .donate-text:last-child {
        margin-right: 0; }
      .index-main-content .donate-teaser .donate-text p,
      .index-main-content .donate-teaser .donate-text h2 {
        color: white; }
    .index-main-content .donate-teaser .donate-image {
      float: left;
      display: block;
      margin-right: 4.8291579146%;
      width: 30.1138947236%;
      padding-top: 2em; }
      .index-main-content .donate-teaser .donate-image:last-child {
        margin-right: 0; }
      .index-main-content .donate-teaser .donate-image img {
        width: 100%; }
    .index-main-content .donate-teaser .donate-buttons {
      padding: 0 0 0 2em; }
      .index-main-content .donate-teaser .donate-buttons a.more {
        color: white; }
    .index-main-content .donate-teaser i {
      background-color: white;
      color: #a003b6; }
  .index-main-content .blog-teaser {
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 100%;
    margin-top: 2em; }
    .index-main-content .blog-teaser:last-child {
      margin-right: 0; }
    .index-main-content .blog-teaser .blog-image {
      float: left;
      display: block;
      margin-right: 2.3576515979%;
      width: 48.821174201%; }
      .index-main-content .blog-teaser .blog-image:last-child {
        margin-right: 0; }
      .index-main-content .blog-teaser .blog-image img {
        width: 100%; }
    .index-main-content .blog-teaser .blog-text {
      float: left;
      display: block;
      margin-right: 2.3576515979%;
      width: 48.821174201%;
      margin-right: 0;
      padding: 0; }
      .index-main-content .blog-teaser .blog-text:last-child {
        margin-right: 0; }
      .index-main-content .blog-teaser .blog-text h2,
      .index-main-content .blog-teaser .blog-text p {
        color: #01ddfe; }
      .index-main-content .blog-teaser .blog-text h3 {
        margin: 0 0 .5em 0; }
      .index-main-content .blog-teaser .blog-text h5 {
        margin: 1em 0 0 0; }

/*pages*/
.page-intro {
  height: 350px;
  position: relative;
  width: 100%; }
  .page-intro .page-intro-text {
    max-width: 68em;
    margin-left: auto;
    margin-right: auto;
    padding: 2em 0 0 0; }
    .page-intro .page-intro-text:after {
      content: "";
      display: table;
      clear: both; }
    .page-intro .page-intro-text .copy {
      float: left;
      display: block;
      margin-right: 2.3576515979%;
      width: 48.821174201%; }
      .page-intro .page-intro-text .copy:last-child {
        margin-right: 0; }

.page-intro-small {
  height: 170px;
  position: relative;
  width: 100%; }
  .page-intro-small .page-intro-text {
    max-width: 68em;
    margin-left: auto;
    margin-right: auto;
    padding: 2em 0 0 0; }
    .page-intro-small .page-intro-text:after {
      content: "";
      display: table;
      clear: both; }
    .page-intro-small .page-intro-text .copy {
      float: left;
      display: block;
      margin-right: 2.3576515979%;
      width: 48.821174201%; }
      .page-intro-small .page-intro-text .copy:last-child {
        margin-right: 0; }

.page-modules {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto; }
  .page-modules:after {
    content: "";
    display: table;
    clear: both; }
  .page-modules .purple,
  .page-modules .teal {
    padding: 1em; }
  .page-modules .purple {
    background-color: #a003b6;
    color: white; }
  .page-modules .teal {
    background-color: #01ddfe;
    color: white; }
  .page-modules .white {
    color: #333333; }
  .page-modules .left-text {
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 48.821174201%;
    margin-top: 1em; }
    .page-modules .left-text:last-child {
      margin-right: 0; }
  .page-modules .right-text {
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 48.821174201%;
    margin-right: 0;
    margin-top: 1em; }
    .page-modules .right-text:last-child {
      margin-right: 0; }
  .page-modules .left-video {
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 48.821174201%;
    margin-top: 1em; }
    .page-modules .left-video:last-child {
      margin-right: 0; }
  .page-modules .left-image {
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 48.821174201%; }
    .page-modules .left-image:last-child {
      margin-right: 0; }
    .page-modules .left-image img {
      width: 100%; }
  .page-modules .right-image {
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 48.821174201%; }
    .page-modules .right-image:last-child {
      margin-right: 0; }
    .page-modules .right-image img {
      width: 100%; }
  .page-modules .module-text {
    height: 15em;
    padding: 2em; }
  .page-modules .full-background-image {
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 100%;
    height: 350px; }
    .page-modules .full-background-image:last-child {
      margin-right: 0; }
    .page-modules .full-background-image .right-text {
      margin-left: 51.178825799%;
      color: white; }
    .page-modules .full-background-image a {
      color: white; }
    .page-modules .full-background-image i {
      background-color: white; }

.page-content {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  margin-top: 1em; }
  .page-content:after {
    content: "";
    display: table;
    clear: both; }
  .page-content .alert {
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 48.821174201%;
    background-color: #b5f326;
    color: white; }
    .page-content .alert:last-child {
      margin-right: 0; }
    .page-content .alert .alert-text {
      padding: 1em; }
      .page-content .alert .alert-text h3 {
        margin: 0 0 .5em 0;
        color: white; }
  .page-content .page-copy {
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 65.8807828007%; }
    .page-content .page-copy:last-child {
      margin-right: 0; }

/*about*/
.about .donors,
.about .volunteers {
  height: 250px; }

/* responsive video container */
.video-container {
  position: relative;
  padding-bottom: 56.25%;
  padding-top: 30px;
  height: 0;
  overflow: hidden; }
  .video-container iframe,
  .video-container object,
  .video-container embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }

/* Blog */
#masonry-loop {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  clear: both;
  margin: 0 auto;
  padding-top: 10em;
  position: relative;
  width: 60%; }
  #masonry-loop:after {
    content: "";
    display: table;
    clear: both; }

.masonry-entry {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 31.7615656014%;
  background-color: #e5e5e5;
  margin-bottom: 2em;
  padding: 1em; }
  .masonry-entry:last-child {
    margin-right: 0; }

/***********/
/* BODY.SCSS */
/***********/
body {
  font-size: 15px;
  margin: 0; }

/***********/
/* TYPE.SCSS */
/***********/
h1 {
  color: white;
  font-family: "proxima-nova",sans-serif;
  font-size: 4em;
  font-style: normal;
  font-weight: 100;
  text-transform: uppercase;
  margin: 0; }

h2 {
  font-family: "proxima-nova",sans-serif;
  font-size: 3em;
  font-style: normal;
  font-weight: 100;
  line-height: .9em;
  text-transform: uppercase;
  margin: 0; }

h3 {
  color: #01ddfe;
  font-family: "minion-pro",serif;
  font-style: italic;
  font-size: 1.5em;
  font-weight: 400;
  text-transform: uppercase; }

h5 {
  color: #01ddfe;
  font-family: "proxima-nova",sans-serif;
  font-size: 1em;
  font-style: normal;
  font-weight: 400; }

h6 {
  color: white;
  font-family: "source-sans-pro",sans-serif;
  font-size: 1.5em;
  font-style: normal;
  font-weight: 300;
  margin: 0 0 1em 0; }

p {
  font-family: "source-sans-pro",sans-serif;
  font-size: 1em;
  font-style: normal;
  font-weight: 300;
  margin: 0 0 1em 0; }

a.more {
  color: #01ddfe;
  font-family: "minion-pro",serif;
  font-style: italic;
  font-size: 1.25em;
  font-weight: 400;
  text-align: center;
  text-transform: uppercase; }
  a.more i {
    background-color: #a003b6;
    border-radius: 5px;
    color: white;
    font-size: .8em;
    margin: 0 2em 0 .5em;
    padding: 7px 10px 5px 10px; }

a.more .white {
  color: white; }

/***********/
/* FORMS.SCSS */
/***********/
/***********/
/* FOOTER.SCSS */
/***********/
footer {
  background-color: #c2c2c2;
  clear: both;
  height: 4em;
  margin-top: 2em; }
  footer .footer-text {
    max-width: 68em;
    margin-left: auto;
    margin-right: auto; }
    footer .footer-text:after {
      content: "";
      display: table;
      clear: both; }
    footer .footer-text p {
      color: white;
      padding: 1em 0 0 0; }
    footer .footer-text ul {
      list-style-type: none; }
    footer .footer-text li {
      color: white;
      display: inline;
      padding: 1em 1em 0 0; }
    footer .footer-text i {
      color: white;
      font-size: 1.25em; }
    footer .footer-text .copyright {
      float: left;
      display: block;
      margin-right: 2.3576515979%;
      width: 31.7615656014%; }
      footer .footer-text .copyright:last-child {
        margin-right: 0; }
    footer .footer-text .contact {
      margin-right: 0;
      float: left;
      display: block;
      margin-right: 2.3576515979%;
      width: 31.7615656014%;
      text-align: center; }
      footer .footer-text .contact:last-child {
        margin-right: 0; }
    footer .footer-text .social {
      margin-right: 0;
      float: left;
      display: block;
      margin-right: 2.3576515979%;
      width: 31.7615656014%;
      text-align: right; }
      footer .footer-text .social:last-child {
        margin-right: 0; }

/*!
Pure v0.5.0
Copyright 2014 Yahoo! Inc. All rights reserved.
Licensed under the BSD License.
https://github.com/yui/pure/blob/master/LICENSE.md
*/
.pure-form input[type=text], .pure-form input[type=password], .pure-form input[type=email], .pure-form input[type=url], .pure-form input[type=date], .pure-form input[type=month], .pure-form input[type=time], .pure-form input[type=datetime], .pure-form input[type=datetime-local], .pure-form input[type=week], .pure-form input[type=number], .pure-form input[type=search], .pure-form input[type=tel], .pure-form input[type=color], .pure-form select, .pure-form textarea {
  padding: .5em .6em;
  display: inline-block;
  border: 1px solid #ccc;
  box-shadow: inset 0 1px 3px #ddd;
  border-radius: 4px;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

.pure-form input:not([type]) {
  padding: .5em .6em;
  display: inline-block;
  border: 1px solid #ccc;
  box-shadow: inset 0 1px 3px #ddd;
  border-radius: 4px;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

.pure-form input[type=color] {
  padding: .2em .5em; }

.pure-form input[type=text]:focus, .pure-form input[type=password]:focus, .pure-form input[type=email]:focus, .pure-form input[type=url]:focus, .pure-form input[type=date]:focus, .pure-form input[type=month]:focus, .pure-form input[type=time]:focus, .pure-form input[type=datetime]:focus, .pure-form input[type=datetime-local]:focus, .pure-form input[type=week]:focus, .pure-form input[type=number]:focus, .pure-form input[type=search]:focus, .pure-form input[type=tel]:focus, .pure-form input[type=color]:focus, .pure-form select:focus, .pure-form textarea:focus {
  outline: 0;
  outline: thin dotted \9;
  border-color: #129FEA; }

.pure-form input:not([type]):focus {
  outline: 0;
  outline: thin dotted \9;
  border-color: #129FEA; }

.pure-form input[type=file]:focus, .pure-form input[type=radio]:focus, .pure-form input[type=checkbox]:focus {
  outline: thin dotted #333;
  outline: 1px auto #129FEA; }

.pure-form .pure-checkbox, .pure-form .pure-radio {
  margin: .5em 0;
  display: block; }

.pure-form input[type=text][disabled], .pure-form input[type=password][disabled], .pure-form input[type=email][disabled], .pure-form input[type=url][disabled], .pure-form input[type=date][disabled], .pure-form input[type=month][disabled], .pure-form input[type=time][disabled], .pure-form input[type=datetime][disabled], .pure-form input[type=datetime-local][disabled], .pure-form input[type=week][disabled], .pure-form input[type=number][disabled], .pure-form input[type=search][disabled], .pure-form input[type=tel][disabled], .pure-form input[type=color][disabled], .pure-form select[disabled], .pure-form textarea[disabled] {
  cursor: not-allowed;
  background-color: #eaeded;
  color: #cad2d3; }

.pure-form input:not([type])[disabled] {
  cursor: not-allowed;
  background-color: #eaeded;
  color: #cad2d3; }

.pure-form input[readonly], .pure-form select[readonly], .pure-form textarea[readonly] {
  background: #eee;
  color: #777;
  border-color: #ccc; }

.pure-form input:focus:invalid, .pure-form textarea:focus:invalid, .pure-form select:focus:invalid {
  color: #b94a48;
  border-color: #ee5f5b; }

.pure-form input:focus:invalid:focus, .pure-form textarea:focus:invalid:focus, .pure-form select:focus:invalid:focus {
  border-color: #e9322d; }

.pure-form input[type=file]:focus:invalid:focus, .pure-form input[type=radio]:focus:invalid:focus, .pure-form input[type=checkbox]:focus:invalid:focus {
  outline-color: #e9322d; }

.pure-form select {
  border: 1px solid #ccc;
  background-color: #fff; }

.pure-form select[multiple] {
  height: auto; }

.pure-form label {
  margin: .5em 0 .2em; }

.pure-form fieldset {
  margin: 0;
  padding: .35em 0 .75em;
  border: 0; }

.pure-form legend {
  display: block;
  width: 100%;
  padding: .3em 0;
  margin-bottom: .3em;
  color: #333;
  border-bottom: 1px solid #e5e5e5; }

.pure-form-stacked input[type=text], .pure-form-stacked input[type=password], .pure-form-stacked input[type=email], .pure-form-stacked input[type=url], .pure-form-stacked input[type=date], .pure-form-stacked input[type=month], .pure-form-stacked input[type=time], .pure-form-stacked input[type=datetime], .pure-form-stacked input[type=datetime-local], .pure-form-stacked input[type=week], .pure-form-stacked input[type=number], .pure-form-stacked input[type=search], .pure-form-stacked input[type=tel], .pure-form-stacked input[type=color], .pure-form-stacked select, .pure-form-stacked label, .pure-form-stacked textarea {
  display: block;
  margin: .25em 0; }

.pure-form-stacked input:not([type]) {
  display: block;
  margin: .25em 0; }

.pure-form-aligned input, .pure-form-aligned textarea, .pure-form-aligned select, .pure-form-aligned .pure-help-inline, .pure-form-message-inline {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  vertical-align: middle; }

.pure-form-aligned textarea {
  vertical-align: top; }

.pure-form-aligned .pure-control-group {
  margin-bottom: .5em; }

.pure-form-aligned .pure-control-group label {
  text-align: right;
  display: inline-block;
  vertical-align: middle;
  width: 10em;
  margin: 0 1em 0 0; }

.pure-form-aligned .pure-controls {
  margin: 1.5em 0 0 10em; }

.pure-form input.pure-input-rounded, .pure-form .pure-input-rounded {
  border-radius: 2em;
  padding: .5em 1em; }

.pure-form .pure-group fieldset {
  margin-bottom: 10px; }

.pure-form .pure-group input {
  display: block;
  padding: 10px;
  margin: 0;
  border-radius: 0;
  position: relative;
  top: -1px; }

.pure-form .pure-group input:focus {
  z-index: 2; }

.pure-form .pure-group input:first-child {
  top: 1px;
  border-radius: 4px 4px 0 0; }

.pure-form .pure-group input:last-child {
  top: -2px;
  border-radius: 0 0 4px 4px; }

.pure-form .pure-group button {
  margin: .35em 0; }

.pure-form .pure-input-1 {
  width: 100%; }

.pure-form .pure-input-2-3 {
  width: 66%; }

.pure-form .pure-input-1-2 {
  width: 50%; }

.pure-form .pure-input-1-3 {
  width: 33%; }

.pure-form .pure-input-1-4 {
  width: 25%; }

.pure-form .pure-help-inline, .pure-form-message-inline {
  display: inline-block;
  padding-left: .3em;
  color: #666;
  vertical-align: middle;
  font-size: .875em; }

.pure-form-message {
  display: block;
  color: #666;
  font-size: .875em; }

@media only screen and (max-width: 480px) {
  .pure-form button[type=submit] {
    margin: .7em 0 0; }

  .pure-form input:not([type]), .pure-form input[type=text], .pure-form input[type=password], .pure-form input[type=email], .pure-form input[type=url], .pure-form input[type=date], .pure-form input[type=month], .pure-form input[type=time], .pure-form input[type=datetime], .pure-form input[type=datetime-local], .pure-form input[type=week], .pure-form input[type=number], .pure-form input[type=search], .pure-form input[type=tel], .pure-form input[type=color], .pure-form label {
    margin-bottom: .3em;
    display: block; }

  .pure-group input:not([type]), .pure-group input[type=text], .pure-group input[type=password], .pure-group input[type=email], .pure-group input[type=url], .pure-group input[type=date], .pure-group input[type=month], .pure-group input[type=time], .pure-group input[type=datetime], .pure-group input[type=datetime-local], .pure-group input[type=week], .pure-group input[type=number], .pure-group input[type=search], .pure-group input[type=tel], .pure-group input[type=color] {
    margin-bottom: 0; }

  .pure-form-aligned .pure-control-group label {
    margin-bottom: .3em;
    text-align: left;
    display: block;
    width: 100%; }

  .pure-form-aligned .pure-controls {
    margin: 1.5em 0 0; }

  .pure-form .pure-help-inline, .pure-form-message-inline, .pure-form-message {
    display: block;
    font-size: .75em;
    padding: .2em 0 .8em; } }
